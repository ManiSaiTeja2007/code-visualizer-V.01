(()=>{"use strict";var t={542:(t,e,a)=>{var i=a(471),o=a.n(i);self.onmessage=async t=>{const{code:e,language:a}=t.data;let i;switch(a){case"javascript":i=(t=>{const e=[],a=[],i=[],n=[],c=[];let s=0,r=0;const l={};try{const d=o().parseScript(t,{loc:!0}),u=[];d.body.forEach((t=>{"FunctionDeclaration"===t.type&&u.push(t.id.name)}));const p=(t,o)=>{var d,v;if("VariableDeclaration"===t.type&&t.declarations&&t.declarations.forEach((t=>{var e;t.init&&(l[t.id.name]=(null===(e=t.init.value)||void 0===e?void 0:e.toString())||"Initialized")})),"AssignmentExpression"===t.type&&(l[t.left.name]=(null===(v=t.right.value)||void 0===v?void 0:v.toString())||"Assigned"),"ArrayExpression"===t.type&&(e.push("Array"),i.push(...t.elements.map(((e,a)=>{var i;return{id:"array-".concat(a,"-").concat(t.loc.start.line),type:"default",data:{label:(null===(i=e.value)||void 0===i?void 0:i.toString())||"empty"},position:{x:100*a,y:50}}})))),"ForStatement"===t.type||"WhileStatement"===t.type){var h;s++;const e={iteration:s,variables:[],activeNode:i.length>0?i[i.length-1].id:void 0,output:""};c.push(e),null!==(h=t.init)&&void 0!==h&&h.declarations&&t.init.declarations.forEach((t=>{var i,o;const n=(null===(i=t.init)||void 0===i||null===(o=i.value)||void 0===o?void 0:o.toString())||"Initialized";a.push({variable:t.id.name,iteration:s,value:n}),e.variables.push({name:t.id.name,value:n}),l[t.id.name]=n}))}if("AssignmentExpression"===t.type){var m,f;const e=(null===(m=t.right.value)||void 0===m?void 0:m.toString())||"Assigned";a.push({variable:t.left.name,iteration:s,value:e}),c.push({iteration:s+1,variables:[{name:t.left.name,value:e}],activeNode:null===(f=i.find((e=>e.id.includes(t.left.name))))||void 0===f?void 0:f.id,output:""}),l[t.left.name]=e,s++}if("ExpressionStatement"===t.type&&"CallExpression"===t.expression.type&&"log"===(null===(d=t.expression.callee.property)||void 0===d?void 0:d.name)){var g;let e="";t.expression.arguments.forEach((t=>{"Literal"===t.type?e+=t.value+" ":"Identifier"===t.type&&l[t.name]&&(e+=l[t.name]+" ")})),c.push({iteration:s+1,variables:[],activeNode:null===(g=i[i.length-1])||void 0===g?void 0:g.id,output:e.trim()}),s++}if("CallExpression"===t.type&&t.callee.name&&u.includes(t.callee.name)){r++,e.push("Recursive Call: ".concat(t.callee.name));const o={iteration:r,variables:t.arguments.map(((e,a)=>{var i;const o=(null===(i=e.value)||void 0===i?void 0:i.toString())||e.name;return l["param".concat(a+1,"_").concat(t.callee.name)]=o,{name:"param".concat(a+1,"_").concat(t.callee.name),value:o}})),activeNode:"recurse-".concat(t.callee.name,"-").concat(r,"-").concat(t.loc.start.line),output:""};i.push({id:o.activeNode,type:"default",data:{label:"".concat(t.callee.name," (Depth: ").concat(r,")")},position:{x:50,y:50+100*r}}),r>1&&(n.push({id:"recurse-edge-".concat(t.callee.name,"-").concat(r,"-").concat(t.loc.start.line),source:"recurse-".concat(t.callee.name,"-").concat(r-1,"-").concat(t.loc.start.line),target:o.activeNode,type:"smoothstep",animated:!0}),o.activeEdge=n[n.length-1].id),c.push(o),a.push(...o.variables.map((t=>({variable:t.name,iteration:r,value:t.value}))))}for(const e in t)t[e]&&"object"===typeof t[e]&&p(t[e],s)};d.body.forEach((t=>p(t,s)))}catch(d){console.error("JavaScript parsing error:",d)}return{structures:e,variableTable:a,nodes:i,edges:n,steps:c}})(e);break;case"cpp":i=(t=>{const e=[],a=[],i=[],o=[],n=[];let c=0,s=0;const r={},l=t.split("\n"),d=/(?:int|void)\s+(\w+)\s*\(([^)]*)\)\s*\{/,u=[];return l.forEach((t=>{const e=t.match(d);e&&u.push(e[1])})),l.forEach(((t,l)=>{const d=t.match(/(int|float|double)\s+(\w+)\s*=\s*([^;]+)/);d&&(r[d[2]]=d[3].trim());const p=t.match(/(\w+)\s*=\s*([^;]+)/);if(p&&(r[p[1]]=p[2].trim()),t.match(/int\s+\w+\[\d*\]/)){e.push("Array");const a=t.match(/\{.*?\}/);if(a){const t=a[0].slice(1,-1).split(",").map((t=>t.trim()));i.push(...t.map(((t,e)=>({id:"array-".concat(e,"-").concat(l),type:"default",data:{label:t||"empty"},position:{x:100*e,y:50}}))))}}if(t.match(/struct\s+Node/)){const a=t.includes("prev")?"Doubly Linked List":t.includes("left")||t.includes("right")?"Binary Tree":"Singly Linked List";e.push(a),"Binary Tree"===a&&(i.push({id:"node-root-".concat(l),type:"default",data:{label:"Root"},position:{x:200,y:50}},{id:"node-left-".concat(l),type:"default",data:{label:"Left"},position:{x:100,y:150}},{id:"node-right-".concat(l),type:"default",data:{label:"Right"},position:{x:300,y:150}}),o.push({id:"edge-root-left-".concat(l),source:"node-root-".concat(l),target:"node-left-".concat(l),type:"smoothstep",animated:!0},{id:"edge-root-right-".concat(l),source:"node-root-".concat(l),target:"node-right-".concat(l),type:"smoothstep",animated:!0}))}if(t.match(/for\s*\(.*;.*;.*\)/)||t.match(/while\s*\(.*\)/)){c++;const e=t.match(/(int|float|double)\s+(\w+)\s*=/),o={iteration:c,variables:[],activeNode:i.length>0?i[i.length-1].id:void 0,output:""};if(e){const t="Initialized";a.push({variable:e[2],iteration:c,value:t}),o.variables.push({name:e[2],value:t}),r[e[2]]=t}n.push(o)}if(p&&!d){var v;const t=p[2].trim();a.push({variable:p[1],iteration:c,value:t}),n.push({iteration:c+1,variables:[{name:p[1],value:t}],activeNode:null===(v=i.find((t=>t.id.includes(p[1]))))||void 0===v?void 0:v.id,output:""}),c++}const h=t.match(/cout\s*<<\s*([^;]+);/);if(h){var m;let t=h[1].trim();t=t.split("<<").map((t=>(t=t.trim(),r[t]?r[t]:t.match(/"/)?t.replace(/"/g,""):t))).join(" "),n.push({iteration:c+1,variables:[],activeNode:null===(m=i[i.length-1])||void 0===m?void 0:m.id,output:t}),c++}u.forEach((c=>{const d=new RegExp("\\b".concat(c,"\\s*\\([^)]*\\)"),"g");if(t.match(d)){s++,e.push("Recursive Call: ".concat(c));const d={iteration:s,variables:[],activeNode:"recurse-".concat(c,"-").concat(s,"-").concat(l),output:""},u=t.match(/\(([^)]*)\)/);u&&u[1].split(",").map((t=>t.trim())).forEach(((t,e)=>{const i=r[t]||t;a.push({variable:"param".concat(e+1,"_").concat(c),iteration:s,value:i}),d.variables.push({name:"param".concat(e+1,"_").concat(c),value:i}),r["param".concat(e+1,"_").concat(c)]=i})),i.push({id:d.activeNode,type:"default",data:{label:"".concat(c," (Depth: ").concat(s,")")},position:{x:50,y:50+100*s}}),s>1&&(o.push({id:"recurse-edge-".concat(c,"-").concat(s,"-").concat(l),source:"recurse-".concat(c,"-").concat(s-1,"-").concat(l),target:d.activeNode,type:"smoothstep",animated:!0}),d.activeEdge=o[o.length-1].id),n.push(d)}}))})),{structures:e,nodes:i,edges:o,variableTable:a,steps:n}})(e);break;case"java":i=(t=>{const e=[],a=[],i=[],o=[],n=[];let c=0,s=0;const r={},l=t.split("\n"),d=/public\s+(?:static\s+)?(?:\w+\s+)?(\w+)\s*\(([^)]*)\)\s*\{/,u=[];return l.forEach((t=>{const e=t.match(d);e&&u.push(e[1])})),l.forEach(((l,d)=>{const p=l.match(/(int|float|double|String)\s+(\w+)\s*=\s*([^;]+)/);p&&(r[p[2]]=p[3].trim());const v=l.match(/(\w+)\s*=\s*([^;]+)/);if(v&&(r[v[1]]=v[2].trim()),l.match(/int\[\]|String\[\]|List</)){e.push("Array/List");const t=l.match(/\{.*?\}/);if(t){const e=t[0].slice(1,-1).split(",").map((t=>t.trim()));i.push(...e.map(((t,e)=>({id:"array-".concat(e,"-").concat(d),type:"default",data:{label:t||"empty"},position:{x:100*e,y:50}}))))}}if(l.match(/class.*Node/)){const a=l.includes("prev")?"Doubly Linked List":l.includes("left")||l.includes("right")?"Binary Tree":l.includes("next")&&t.includes("head.next")?"Circular Linked List":"Singly Linked List";e.push(a),"Binary Tree"===a&&(i.push({id:"node-root-".concat(d),type:"default",data:{label:"Root"},position:{x:200,y:50}},{id:"node-left-".concat(d),type:"default",data:{label:"Left"},position:{x:100,y:150}},{id:"node-right-".concat(d),type:"default",data:{label:"Right"},position:{x:300,y:150}}),o.push({id:"edge-root-left-".concat(d),source:"node-root-".concat(d),target:"node-left-".concat(d),type:"smoothstep",animated:!0},{id:"edge-root-right-".concat(d),source:"node-root-".concat(d),target:"node-right-".concat(d),type:"smoothstep",animated:!0}))}if(l.match(/for\s*\(.*;.*;.*\)/)||l.match(/while\s*\(.*\)/)){c++;const t=l.match(/(int|float|double|String)\s+(\w+)\s*=/),e={iteration:c,variables:[],activeNode:i.length>0?i[i.length-1].id:void 0,output:""};if(t){const i="Initialized";a.push({variable:t[2],iteration:c,value:i}),e.variables.push({name:t[2],value:i}),r[t[2]]=i}n.push(e)}if(v&&!p){var h;const t=v[2].trim();a.push({variable:v[1],iteration:c,value:t}),n.push({iteration:c+1,variables:[{name:v[1],value:t}],activeNode:null===(h=i.find((t=>t.id.includes(v[1]))))||void 0===h?void 0:h.id,output:""}),c++}const m=l.match(/System\.out\.println\(([^)]+)\)/);if(m){var f;let t=m[1].trim();r[t]?t=r[t]:t.match(/"/)&&(t=t.replace(/"/g,"")),n.push({iteration:c+1,variables:[],activeNode:null===(f=i[i.length-1])||void 0===f?void 0:f.id,output:t}),c++}u.forEach((t=>{const c=new RegExp("\\b".concat(t,"\\s*\\([^)]*\\)"),"g");if(l.match(c)){s++,e.push("Recursive Call: ".concat(t));const c={iteration:s,variables:[],activeNode:"recurse-".concat(t,"-").concat(s,"-").concat(d),output:""},u=l.match(/\(([^)]*)\)/);u&&u[1].split(",").map((t=>t.trim())).forEach(((e,i)=>{const o=r[e]||e;a.push({variable:"param".concat(i+1,"_").concat(t),iteration:s,value:o}),c.variables.push({name:"param".concat(i+1,"_").concat(t),value:o}),r["param".concat(i+1,"_").concat(t)]=o})),i.push({id:c.activeNode,type:"default",data:{label:"".concat(t," (Depth: ").concat(s,")")},position:{x:50,y:50+100*s}}),s>1&&(o.push({id:"recurse-edge-".concat(t,"-").concat(s,"-").concat(d),source:"recurse-".concat(t,"-").concat(s-1,"-").concat(d),target:c.activeNode,type:"smoothstep",animated:!0}),c.activeEdge=o[o.length-1].id),n.push(c)}}))})),{structures:e,variableTable:a,nodes:i,edges:o,steps:n}})(e);break;default:i={structures:[],variableTable:[],nodes:[],edges:[],steps:[]}}self.postMessage(i)}}},e={};function a(i){var o=e[i];if(void 0!==o)return o.exports;var n=e[i]={exports:{}};return t[i].call(n.exports,n,n.exports,a),n.exports}a.m=t,a.x=()=>{var t=a.O(void 0,[471],(()=>a(542)));return t=a.O(t)},(()=>{var t=[];a.O=(e,i,o,n)=>{if(!i){var c=1/0;for(d=0;d<t.length;d++){i=t[d][0],o=t[d][1],n=t[d][2];for(var s=!0,r=0;r<i.length;r++)(!1&n||c>=n)&&Object.keys(a.O).every((t=>a.O[t](i[r])))?i.splice(r--,1):(s=!1,n<c&&(c=n));if(s){t.splice(d--,1);var l=o();void 0!==l&&(e=l)}}return e}n=n||0;for(var d=t.length;d>0&&t[d-1][2]>n;d--)t[d]=t[d-1];t[d]=[i,o,n]}})(),a.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return a.d(e,{a:e}),e},a.d=(t,e)=>{for(var i in e)a.o(e,i)&&!a.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},a.f={},a.e=t=>Promise.all(Object.keys(a.f).reduce(((e,i)=>(a.f[i](t,e),e)),[])),a.u=t=>"static/js/"+t+".6113d985.chunk.js",a.miniCssF=t=>{},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),a.p="/ManiSaiTeja2007/code-visualizer-V.01/",(()=>{var t={542:1};a.f.i=(e,i)=>{t[e]||importScripts(a.p+a.u(e))};var e=self.webpackChunkcode_visualizer=self.webpackChunkcode_visualizer||[],i=e.push.bind(e);e.push=e=>{var o=e[0],n=e[1],c=e[2];for(var s in n)a.o(n,s)&&(a.m[s]=n[s]);for(c&&c(a);o.length;)t[o.pop()]=1;i(e)}})(),(()=>{var t=a.x;a.x=()=>a.e(471).then(t)})();a.x()})();
//# sourceMappingURL=542.2619e7fc.chunk.js.map