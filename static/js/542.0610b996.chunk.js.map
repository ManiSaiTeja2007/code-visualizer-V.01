{"version":3,"file":"static/js/542.0610b996.chunk.js","mappings":"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","sources":["worker.ts","parsers/javascript/parser.ts","parsers/cpp/parser.ts","parsers/java/parser.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { parseJavaScript, parseCpp, parseJava } from './parsers';\r\nimport { AnalysisState } from './types';\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = async (e: MessageEvent<{ code: string; language: string }>) => {\r\n  const { code, language } = e.data;\r\n  let result: AnalysisState;\r\n  switch (language) {\r\n    case 'javascript':\r\n      result = parseJavaScript(code);\r\n      break;\r\n    case 'cpp':\r\n      result = parseCpp(code);\r\n      break;\r\n    case 'java':\r\n      result = parseJava(code);\r\n      break;\r\n    default:\r\n      result = { structures: [], variableTable: [], nodes: [], edges: [], steps: [] };\r\n  }\r\n  self.postMessage(result);\r\n};\r\n/* eslint-enable no-restricted-globals */\r\n\r\nexport {};","import esprima from 'esprima';\r\nimport { AnalysisState, Node, Edge, Step } from '../../types';\r\n\r\nexport const parseJavaScript = (code: string): AnalysisState => {\r\n  const structures: string[] = [];\r\n  const variableTable: AnalysisState['variableTable'] = [];\r\n  const nodes: Node[] = [];\r\n  const edges: Edge[] = [];\r\n  const steps: Step[] = [];\r\n  let iteration = 0;\r\n  let recursionDepth = 0;\r\n  const variableState: Record<string, string> = {}; // Track variable values\r\n\r\n  try {\r\n    const ast = esprima.parseScript(code, { loc: true });\r\n    const functionNames: string[] = [];\r\n\r\n    // First pass: collect function names\r\n    ast.body.forEach((node: any) => {\r\n      if (node.type === 'FunctionDeclaration') {\r\n        functionNames.push(node.id.name);\r\n      }\r\n    });\r\n\r\n    // Second pass: analyze AST\r\n    const traverse = (node: any, parentIteration: number) => {\r\n      // Update variable state\r\n      if (node.type === 'VariableDeclaration' && node.declarations) {\r\n        node.declarations.forEach((decl: any) => {\r\n          if (decl.init) {\r\n            variableState[decl.id.name] = decl.init.value?.toString() || 'Initialized';\r\n          }\r\n        });\r\n      }\r\n      if (node.type === 'AssignmentExpression') {\r\n        variableState[node.left.name] = node.right.value?.toString() || 'Assigned';\r\n      }\r\n\r\n      if (node.type === 'ArrayExpression') {\r\n        structures.push('Array');\r\n        nodes.push(...node.elements.map((el: any, idx: number) => ({\r\n          id: `array-${idx}-${node.loc.start.line}`,\r\n          type: 'default',\r\n          data: { label: el.value?.toString() || 'empty' },\r\n          position: { x: idx * 100, y: 50 },\r\n        })));\r\n      }\r\n\r\n      if (node.type === 'ForStatement' || node.type === 'WhileStatement') {\r\n        iteration++;\r\n        const step: Step = {\r\n          iteration,\r\n          variables: [],\r\n          activeNode: nodes.length > 0 ? nodes[nodes.length - 1].id : undefined,\r\n          output: '',\r\n        };\r\n        steps.push(step);\r\n\r\n        if (node.init?.declarations) {\r\n          node.init.declarations.forEach((decl: any) => {\r\n            const value = decl.init?.value?.toString() || 'Initialized';\r\n            variableTable.push({ variable: decl.id.name, iteration, value });\r\n            step.variables.push({ name: decl.id.name, value });\r\n            variableState[decl.id.name] = value;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (node.type === 'AssignmentExpression') {\r\n        const value = node.right.value?.toString() || 'Assigned';\r\n        variableTable.push({ variable: node.left.name, iteration, value });\r\n        steps.push({\r\n          iteration: iteration + 1,\r\n          variables: [{ name: node.left.name, value }],\r\n          activeNode: nodes.find(n => n.id.includes(node.left.name))?.id,\r\n          output: '',\r\n        });\r\n        variableState[node.left.name] = value;\r\n        iteration++;\r\n      }\r\n\r\n      // Detect console.log\r\n      if (node.type === 'ExpressionStatement' && node.expression.type === 'CallExpression' && node.expression.callee.property?.name === 'log') {\r\n        let output = '';\r\n        node.expression.arguments.forEach((arg: any) => {\r\n          if (arg.type === 'Literal') {\r\n            output += arg.value + ' ';\r\n          } else if (arg.type === 'Identifier' && variableState[arg.name]) {\r\n            output += variableState[arg.name] + ' ';\r\n          }\r\n        });\r\n        steps.push({\r\n          iteration: iteration + 1,\r\n          variables: [],\r\n          activeNode: nodes[nodes.length - 1]?.id,\r\n          output: output.trim(),\r\n        });\r\n        iteration++;\r\n      }\r\n\r\n      if (node.type === 'CallExpression' && node.callee.name && functionNames.includes(node.callee.name)) {\r\n        recursionDepth++;\r\n        structures.push(`Recursive Call: ${node.callee.name}`);\r\n        const step: Step = {\r\n          iteration: recursionDepth,\r\n          variables: node.arguments.map((arg: any, idx: number) => {\r\n            const value = arg.value?.toString() || arg.name;\r\n            variableState[`param${idx + 1}_${node.callee.name}`] = value;\r\n            return { name: `param${idx + 1}_${node.callee.name}`, value };\r\n          }),\r\n          activeNode: `recurse-${node.callee.name}-${recursionDepth}-${node.loc.start.line}`,\r\n          output: '',\r\n        };\r\n        nodes.push({\r\n          id: step.activeNode!,\r\n          type: 'default',\r\n          data: { label: `${node.callee.name} (Depth: ${recursionDepth})` },\r\n          position: { x: 50, y: 50 + recursionDepth * 100 },\r\n        });\r\n        if (recursionDepth > 1) {\r\n          edges.push({\r\n            id: `recurse-edge-${node.callee.name}-${recursionDepth}-${node.loc.start.line}`,\r\n            source: `recurse-${node.callee.name}-${recursionDepth - 1}-${node.loc.start.line}`,\r\n            target: step.activeNode!,\r\n            type: 'smoothstep',\r\n            animated: true,\r\n          });\r\n          step.activeEdge = edges[edges.length - 1].id;\r\n        }\r\n        steps.push(step);\r\n        variableTable.push(...step.variables.map(v => ({\r\n          variable: v.name,\r\n          iteration: recursionDepth,\r\n          value: v.value,\r\n        })));\r\n      }\r\n\r\n      for (const key in node) {\r\n        if (node[key] && typeof node[key] === 'object') {\r\n          traverse(node[key], iteration);\r\n        }\r\n      }\r\n    };\r\n\r\n    ast.body.forEach((node: any) => traverse(node, iteration));\r\n  } catch (error) {\r\n    console.error('JavaScript parsing error:', error);\r\n  }\r\n\r\n  return { structures, variableTable, nodes, edges, steps };\r\n};","import { AnalysisState, Node, Edge, Step } from '../../types';\r\n\r\nexport const parseCpp = (code: string): AnalysisState => {\r\n  const structures: string[] = [];\r\n  const variableTable: AnalysisState['variableTable'] = [];\r\n  const nodes: Node[] = [];\r\n  const edges: Edge[] = [];\r\n  const steps: Step[] = [];\r\n  let iteration = 0;\r\n  let recursionDepth = 0;\r\n  const variableState: Record<string, string> = {};\r\n\r\n  const lines = code.split('\\n');\r\n  const functionRegex = /(?:int|void)\\s+(\\w+)\\s*\\(([^)]*)\\)\\s*\\{/;\r\n  const functionNames: string[] = [];\r\n\r\n  // First pass: collect function names\r\n  lines.forEach((line: string) => {\r\n    const funcMatch = line.match(functionRegex);\r\n    if (funcMatch) {\r\n      functionNames.push(funcMatch[1]);\r\n    }\r\n  });\r\n\r\n  // Second pass: analyze code\r\n  lines.forEach((line: string, lineIndex: number) => {\r\n    // Update variable state\r\n    const varDeclMatch = line.match(/(int|float|double)\\s+(\\w+)\\s*=\\s*([^;]+)/);\r\n    if (varDeclMatch) {\r\n      variableState[varDeclMatch[2]] = varDeclMatch[3].trim();\r\n    }\r\n    const assignMatch = line.match(/(\\w+)\\s*=\\s*([^;]+)/);\r\n    if (assignMatch) {\r\n      variableState[assignMatch[1]] = assignMatch[2].trim();\r\n    }\r\n\r\n    // Detect arrays\r\n    if (line.match(/int\\s+\\w+\\[\\d*\\]/)) {\r\n      structures.push('Array');\r\n      const arrayMatch = line.match(/\\{.*?\\}/);\r\n      if (arrayMatch) {\r\n        const elements = arrayMatch[0].slice(1, -1).split(',').map(item => item.trim());\r\n        nodes.push(...elements.map((el: string, idx: number) => ({\r\n          id: `array-${idx}-${lineIndex}`,\r\n          type: 'default',\r\n          data: { label: el || 'empty' },\r\n          position: { x: idx * 100, y: 50 },\r\n        })));\r\n      }\r\n    }\r\n\r\n    // Detect node-based structures\r\n    if (line.match(/struct\\s+Node/)) {\r\n      const listType = line.includes('prev') ? 'Doubly Linked List' :\r\n                       line.includes('left') || line.includes('right') ? 'Binary Tree' : 'Singly Linked List';\r\n      structures.push(listType);\r\n      if (listType === 'Binary Tree') {\r\n        nodes.push(\r\n          { id: `node-root-${lineIndex}`, type: 'default', data: { label: 'Root' }, position: { x: 200, y: 50 } },\r\n          { id: `node-left-${lineIndex}`, type: 'default', data: { label: 'Left' }, position: { x: 100, y: 150 } },\r\n          { id: `node-right-${lineIndex}`, type: 'default', data: { label: 'Right' }, position: { x: 300, y: 150 } },\r\n        );\r\n        edges.push(\r\n          { id: `edge-root-left-${lineIndex}`, source: `node-root-${lineIndex}`, target: `node-left-${lineIndex}`, type: 'smoothstep', animated: true },\r\n          { id: `edge-root-right-${lineIndex}`, source: `node-root-${lineIndex}`, target: `node-right-${lineIndex}`, type: 'smoothstep', animated: true },\r\n        );\r\n      }\r\n    }\r\n\r\n    // Detect loops\r\n    if (line.match(/for\\s*\\(.*;.*;.*\\)/) || line.match(/while\\s*\\(.*\\)/)) {\r\n      iteration++;\r\n      const varMatch = line.match(/(int|float|double)\\s+(\\w+)\\s*=/);\r\n      const step: Step = { iteration, variables: [], activeNode: nodes.length > 0 ? nodes[nodes.length - 1].id : undefined, output: '' };\r\n      if (varMatch) {\r\n        const value = 'Initialized';\r\n        variableTable.push({ variable: varMatch[2], iteration, value });\r\n        step.variables.push({ name: varMatch[2], value });\r\n        variableState[varMatch[2]] = value;\r\n      }\r\n      steps.push(step);\r\n    }\r\n\r\n    // Detect assignments\r\n    if (assignMatch && !varDeclMatch) {\r\n      const value = assignMatch[2].trim();\r\n      variableTable.push({ variable: assignMatch[1], iteration, value });\r\n      steps.push({\r\n        iteration: iteration + 1,\r\n        variables: [{ name: assignMatch[1], value }],\r\n        activeNode: nodes.find(n => n.id.includes(assignMatch[1]))?.id,\r\n        output: '',\r\n      });\r\n      iteration++;\r\n    }\r\n\r\n    // Detect cout\r\n    const coutMatch = line.match(/cout\\s*<<\\s*([^;]+);/);\r\n    if (coutMatch) {\r\n      let output = coutMatch[1].trim();\r\n      output = output.split('<<').map(part => {\r\n        part = part.trim();\r\n        if (variableState[part]) {\r\n          return variableState[part];\r\n        } else if (part.match(/\"/)) {\r\n          return part.replace(/\"/g, '');\r\n        }\r\n        return part;\r\n      }).join(' ');\r\n      steps.push({\r\n        iteration: iteration + 1,\r\n        variables: [],\r\n        activeNode: nodes[nodes.length - 1]?.id,\r\n        output,\r\n      });\r\n      iteration++;\r\n    }\r\n\r\n    // Detect recursive function calls\r\n    functionNames.forEach((funcName) => {\r\n      const recursiveCallRegex = new RegExp(`\\\\b${funcName}\\\\s*\\\\([^)]*\\\\)`, 'g');\r\n      if (line.match(recursiveCallRegex)) {\r\n        recursionDepth++;\r\n        structures.push(`Recursive Call: ${funcName}`);\r\n        const step: Step = {\r\n          iteration: recursionDepth,\r\n          variables: [],\r\n          activeNode: `recurse-${funcName}-${recursionDepth}-${lineIndex}`,\r\n          output: '',\r\n        };\r\n        const paramMatch = line.match(/\\(([^)]*)\\)/);\r\n        if (paramMatch) {\r\n          const params = paramMatch[1].split(',').map(p => p.trim());\r\n          params.forEach((param, idx) => {\r\n            const value = variableState[param] || param;\r\n            variableTable.push({ variable: `param${idx + 1}_${funcName}`, iteration: recursionDepth, value });\r\n            step.variables.push({ name: `param${idx + 1}_${funcName}`, value });\r\n            variableState[`param${idx + 1}_${funcName}`] = value;\r\n          });\r\n        }\r\n        nodes.push({\r\n          id: step.activeNode!,\r\n          type: 'default',\r\n          data: { label: `${funcName} (Depth: ${recursionDepth})` },\r\n          position: { x: 50, y: 50 + recursionDepth * 100 },\r\n        });\r\n        if (recursionDepth > 1) {\r\n          edges.push({\r\n            id: `recurse-edge-${funcName}-${recursionDepth}-${lineIndex}`,\r\n            source: `recurse-${funcName}-${recursionDepth - 1}-${lineIndex}`,\r\n            target: step.activeNode!,\r\n            type: 'smoothstep',\r\n            animated: true,\r\n          });\r\n          step.activeEdge = edges[edges.length - 1].id;\r\n        }\r\n        steps.push(step);\r\n      }\r\n    });\r\n  });\r\n\r\n  return { structures, nodes, edges, variableTable, steps };\r\n};","import { AnalysisState, Node, Edge, Step } from '../../types';\r\n\r\nexport const parseJava = (code: string): AnalysisState => {\r\n  const structures: string[] = [];\r\n  const variableTable: AnalysisState['variableTable'] = [];\r\n  const nodes: Node[] = [];\r\n  const edges: Edge[] = [];\r\n  const steps: Step[] = [];\r\n  let iteration = 0;\r\n  let recursionDepth = 0;\r\n  const variableState: Record<string, string> = {};\r\n\r\n  const lines = code.split('\\n');\r\n  const methodRegex = /public\\s+(?:static\\s+)?(?:\\w+\\s+)?(\\w+)\\s*\\(([^)]*)\\)\\s*\\{/;\r\n  const methodNames: string[] = [];\r\n\r\n  // First pass: collect method names\r\n  lines.forEach((line: string) => {\r\n    const methodMatch = line.match(methodRegex);\r\n    if (methodMatch) {\r\n      methodNames.push(methodMatch[1]);\r\n    }\r\n  });\r\n\r\n  // Second pass: analyze code\r\n  lines.forEach((line: string, lineIndex: number) => {\r\n    // Update variable state\r\n    const varDeclMatch = line.match(/(int|float|double|String)\\s+(\\w+)\\s*=\\s*([^;]+)/);\r\n    if (varDeclMatch) {\r\n      variableState[varDeclMatch[2]] = varDeclMatch[3].trim();\r\n    }\r\n    const assignMatch = line.match(/(\\w+)\\s*=\\s*([^;]+)/);\r\n    if (assignMatch) {\r\n      variableState[assignMatch[1]] = assignMatch[2].trim();\r\n    }\r\n\r\n    // Detect arrays or lists\r\n    if (line.match(/int\\[\\]|String\\[\\]|List</)) {\r\n      structures.push('Array/List');\r\n      const arrayMatch = line.match(/\\{.*?\\}/);\r\n      if (arrayMatch) {\r\n        const elements = arrayMatch[0].slice(1, -1).split(',').map(item => item.trim());\r\n        nodes.push(...elements.map((el: string, idx: number) => ({\r\n          id: `array-${idx}-${lineIndex}`,\r\n          type: 'default',\r\n          data: { label: el || 'empty' },\r\n          position: { x: idx * 100, y: 50 },\r\n        })));\r\n      }\r\n    }\r\n\r\n    // Detect node-based structures\r\n    if (line.match(/class.*Node/)) {\r\n      const listType = line.includes('prev') ? 'Doubly Linked List' :\r\n                       line.includes('left') || line.includes('right') ? 'Binary Tree' :\r\n                       line.includes('next') && code.includes('head.next') ? 'Circular Linked List' : 'Singly Linked List';\r\n      structures.push(listType);\r\n      if (listType === 'Binary Tree') {\r\n        nodes.push(\r\n          { id: `node-root-${lineIndex}`, type: 'default', data: { label: 'Root' }, position: { x: 200, y: 50 } },\r\n          { id: `node-left-${lineIndex}`, type: 'default', data: { label: 'Left' }, position: { x: 100, y: 150 } },\r\n          { id: `node-right-${lineIndex}`, type: 'default', data: { label: 'Right' }, position: { x: 300, y: 150 } },\r\n        );\r\n        edges.push(\r\n          { id: `edge-root-left-${lineIndex}`, source: `node-root-${lineIndex}`, target: `node-left-${lineIndex}`, type: 'smoothstep', animated: true },\r\n          { id: `edge-root-right-${lineIndex}`, source: `node-root-${lineIndex}`, target: `node-right-${lineIndex}`, type: 'smoothstep', animated: true },\r\n        );\r\n      }\r\n    }\r\n\r\n    // Detect loops\r\n    if (line.match(/for\\s*\\(.*;.*;.*\\)/) || line.match(/while\\s*\\(.*\\)/)) {\r\n      iteration++;\r\n      const varMatch = line.match(/(int|float|double|String)\\s+(\\w+)\\s*=/);\r\n      const step: Step = { iteration, variables: [], activeNode: nodes.length > 0 ? nodes[nodes.length - 1].id : undefined, output: '' };\r\n      if (varMatch) {\r\n        const value = 'Initialized';\r\n        variableTable.push({ variable: varMatch[2], iteration, value });\r\n        step.variables.push({ name: varMatch[2], value });\r\n        variableState[varMatch[2]] = value;\r\n      }\r\n      steps.push(step);\r\n    }\r\n\r\n    // Detect assignments\r\n    if (assignMatch && !varDeclMatch) {\r\n      const value = assignMatch[2].trim();\r\n      variableTable.push({ variable: assignMatch[1], iteration, value });\r\n      steps.push({\r\n        iteration: iteration + 1,\r\n        variables: [{ name: assignMatch[1], value }],\r\n        activeNode: nodes.find(n => n.id.includes(assignMatch[1]))?.id,\r\n        output: '',\r\n      });\r\n      iteration++;\r\n    }\r\n\r\n    // Detect System.out.println\r\n    const printMatch = line.match(/System\\.out\\.println\\(([^)]+)\\)/);\r\n    if (printMatch) {\r\n      let output = printMatch[1].trim();\r\n      if (variableState[output]) {\r\n        output = variableState[output];\r\n      } else if (output.match(/\"/)) {\r\n        output = output.replace(/\"/g, '');\r\n      }\r\n      steps.push({\r\n        iteration: iteration + 1,\r\n        variables: [],\r\n        activeNode: nodes[nodes.length - 1]?.id,\r\n        output,\r\n      });\r\n      iteration++;\r\n    }\r\n\r\n    // Detect recursive method calls\r\n    methodNames.forEach((methodName) => {\r\n      const recursiveCallRegex = new RegExp(`\\\\b${methodName}\\\\s*\\\\([^)]*\\\\)`, 'g');\r\n      if (line.match(recursiveCallRegex)) {\r\n        recursionDepth++;\r\n        structures.push(`Recursive Call: ${methodName}`);\r\n        const step: Step = {\r\n          iteration: recursionDepth,\r\n          variables: [],\r\n          activeNode: `recurse-${methodName}-${recursionDepth}-${lineIndex}`,\r\n          output: '',\r\n        };\r\n        const paramMatch = line.match(/\\(([^)]*)\\)/);\r\n        if (paramMatch) {\r\n          const params = paramMatch[1].split(',').map(p => p.trim());\r\n          params.forEach((param, idx) => {\r\n            const value = variableState[param] || param;\r\n            variableTable.push({ variable: `param${idx + 1}_${methodName}`, iteration: recursionDepth, value });\r\n            step.variables.push({ name: `param${idx + 1}_${methodName}`, value });\r\n            variableState[`param${idx + 1}_${methodName}`] = value;\r\n          });\r\n        }\r\n        nodes.push({\r\n          id: step.activeNode!,\r\n          type: 'default',\r\n          data: { label: `${methodName} (Depth: ${recursionDepth})` },\r\n          position: { x: 50, y: 50 + recursionDepth * 100 },\r\n        });\r\n        if (recursionDepth > 1) {\r\n          edges.push({\r\n            id: `recurse-edge-${methodName}-${recursionDepth}-${lineIndex}`,\r\n            source: `recurse-${methodName}-${recursionDepth - 1}-${lineIndex}`,\r\n            target: step.activeNode!,\r\n            type: 'smoothstep',\r\n            animated: true,\r\n          });\r\n          step.activeEdge = edges[edges.length - 1].id;\r\n        }\r\n        steps.push(step);\r\n      }\r\n    });\r\n  });\r\n\r\n  return { structures, variableTable, nodes, edges, steps };\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [471], () => (__webpack_require__(542)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"6113d985\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/code-visualizer-V.01/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t542: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcode_visualizer\"] = self[\"webpackChunkcode_visualizer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(471).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["self","onmessage","async","code","language","e","data","result","structures","variableTable","nodes","edges","steps","iteration","recursionDepth","variableState","ast","esprima","loc","functionNames","body","forEach","node","type","push","id","name","traverse","parentIteration","_node$expression$call","_node$right$value","declarations","decl","_decl$init$value","init","value","toString","left","right","elements","map","el","idx","_el$value","concat","start","line","label","position","x","y","_node$init","step","variables","activeNode","length","undefined","output","_decl$init","_decl$init$value2","variable","_node$right$value2","_nodes$find","find","n","includes","expression","callee","property","_nodes","arguments","arg","trim","_arg$value","source","target","animated","activeEdge","v","key","error","console","parseJavaScript","lines","split","functionRegex","funcMatch","match","lineIndex","varDeclMatch","assignMatch","arrayMatch","slice","item","listType","varMatch","coutMatch","part","replace","join","funcName","recursiveCallRegex","RegExp","paramMatch","p","param","parseCpp","methodRegex","methodNames","methodMatch","printMatch","methodName","parseJava","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}